services:
  # Go API Service
  - type: web
    name: newMap-api
    runtime: docker
    dockerfilePath: ./apps/api/Dockerfile
    dockerContext: .
    repo: https://github.com/Oferzz/newMap
    branch: main
    buildFilter:
      paths:
        - apps/api/**
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: newMap-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: newMap-cache
          type: redis
          property: connectionString
      - key: INTERNAL_REDIS_URL
        fromService:
          name: newMap-cache
          type: redis
          property: internalConnectionString
      - key: MEDIA_PATH
        value: /data/media
      - key: CDN_URL
        value: https://newmap-fe.onrender.com
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_ISSUER
        value: newMap
      - key: DB_MIGRATIONS_PATH
        value: ./migrations
      - key: ENVIRONMENT
        value: production
      - key: MAPBOX_API_KEY
        sync: false # Set manually in Render dashboard
      - key: ALLOWED_ORIGINS
        value: https://newmap-fe.onrender.com,http://localhost:3000,http://localhost:5173
      - key: ELASTICSEARCH_URL
        fromService:
          name: newMap-elasticsearch
          type: web
          property: hostURL
    disk:
      name: media-storage
      mountPath: /data
      sizeGB: 20 # Start with 20GB, can be increased
    healthCheckPath: /api/health
    autoDeploy: true
    plan: starter # Can upgrade to standard or pro
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80
      targetCPUPercent: 70

  # React Frontend (Static Site)
  - type: web
    name: newMap-fe
    runtime: static
    buildCommand: cd apps/web && npm install && npm run build
    staticPublishPath: ./apps/web/dist
    repo: https://github.com/Oferzz/newMap
    branch: main
    buildFilter:
      paths:
        - apps/web/**
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options  
        value: nosniff
    envVars:
      - key: VITE_API_URL
        value: https://newmap-qojk.onrender.com/api/v1
      - key: VITE_MAPBOX_TOKEN
        sync: false # Set manually in Render dashboard

  # Elasticsearch Service  
  - type: web
    name: newMap-elasticsearch
    runtime: docker
    dockerfilePath: ./services/elasticsearch/Dockerfile
    dockerContext: .
    repo: https://github.com/Oferzz/newMap
    branch: main
    buildFilter:
      paths:
        - services/elasticsearch/**
    envVars:
      - key: ES_JAVA_OPTS
        value: "-Xms512m -Xmx512m"
      - key: discovery.type
        value: single-node
      - key: xpack.security.enabled
        value: "false"
    disk:
      name: elasticsearch-data
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 10
    plan: starter
    scaling:
      minInstances: 1
      maxInstances: 1

  # Redis Cache Service (Render Key-Value)
  - type: redis
    name: newMap-cache
    plan: starter # starter ($7/mo), standard ($30/mo), or pro
    maxmemoryPolicy: allkeys-lru # Eviction policy for caching
    ipAllowList: [] # Empty array allows connections from Render services only

databases:
  # PostgreSQL Database
  - name: newMap-db
    plan: starter # starter ($7/mo), standard, or pro
    databaseName: newMap
    user: newMap_user
    postgresMajorVersion: 15
    ipAllowList: [] # Empty array allows connections from Render services only

# Environment Groups (for shared environment variables)
envVarGroups:
  - name: newMap-shared
    envVars:
      - key: APP_NAME
        value: Trip Planning Platform
      - key: APP_VERSION
        value: 1.0.0
      - key: LOG_LEVEL
        value: info
      - key: RATE_LIMIT_PER_MIN
        value: 60
      - key: MAX_UPLOAD_SIZE
        value: 52428800 # 50MB
      - key: ALLOWED_MIME_TYPES
        value: image/jpeg,image/png,image/webp,video/mp4
      - key: THUMBNAIL_QUALITY
        value: 85
      - key: SENTRY_DSN
        sync: false # Set manually if using Sentry